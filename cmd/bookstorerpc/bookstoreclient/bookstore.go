// Code generated by goctl. DO NOT EDIT!
// Source: bookstore.proto

//go:generate mockgen -destination ./bookstore_mock.go -package bookstoreclient -source $GOFILE

package bookstoreclient

import (
	"context"

	"bookstore/cmd/bookstorerpc/bookstore"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	Response  = bookstore.Response
	CheckReq  = bookstore.CheckReq
	CheckResp = bookstore.CheckResp
	AddReq    = bookstore.AddReq
	AddResp   = bookstore.AddResp
	Request   = bookstore.Request

	Bookstore interface {
		Hello(ctx context.Context, in *Request) (*Response, error)
		Check(ctx context.Context, in *CheckReq) (*CheckResp, error)
		Add(ctx context.Context, in *AddReq) (*AddResp, error)
	}

	defaultBookstore struct {
		cli zrpc.Client
	}
)

func NewBookstore(cli zrpc.Client) Bookstore {
	return &defaultBookstore{
		cli: cli,
	}
}

func (m *defaultBookstore) Hello(ctx context.Context, in *Request) (*Response, error) {
	client := bookstore.NewBookstoreClient(m.cli.Conn())
	return client.Hello(ctx, in)
}

func (m *defaultBookstore) Check(ctx context.Context, in *CheckReq) (*CheckResp, error) {
	client := bookstore.NewBookstoreClient(m.cli.Conn())
	return client.Check(ctx, in)
}

func (m *defaultBookstore) Add(ctx context.Context, in *AddReq) (*AddResp, error) {
	client := bookstore.NewBookstoreClient(m.cli.Conn())
	return client.Add(ctx, in)
}
